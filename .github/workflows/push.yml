name: 'GitHub Actions'
'on':
  - push
concurrency: 'ci-${{ github.ref }}'
env:
  APP_IMAGE: keboola/elastic-writer
  KBC_DEVELOPERPORTAL_VENDOR: keboola
  KBC_DEVELOPERPORTAL_APP: keboola.wr-elasticsearch
  KBC_DEVELOPERPORTAL_USERNAME: keboola+elastic_writer_github_actions
  KBC_DEVELOPERPORTAL_PASSWORD: '${{ secrets.KBC_DEVELOPERPORTAL_PASSWORD }}'

  DOCKERHUB_USER: '${{ secrets.DOCKERHUB_USER }}'
  DOCKERHUB_TOKEN: '${{ secrets.DOCKERHUB_TOKEN }}'
  KBC_STORAGE_TOKEN: '${{ secrets.KBC_STORAGE_TOKEN }}'
  KBC_TEST_PROJECT_URL: ''
  KBC_TEST_PROJECT_CONFIGS: ''
jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      app_image_tag: '${{ steps.tag.outputs.app_image_tag }}'
      is_semantic_tag: '${{ steps.tag.outputs.is_semantic_tag }}'
    steps:
      -
        name: 'Check out the repo'
        uses: actions/checkout@v3
      -
        name: 'Print Docker version'
        run: 'docker -v'
      -
        name: 'Docker login'
        if: env.DOCKERHUB_TOKEN
        run: 'docker login --username "$DOCKERHUB_USER" --password "$DOCKERHUB_TOKEN"'
      -
        name: 'Build image'
        run: 'docker build -t $APP_IMAGE .'
      -
        name: 'Set image tag'
        id: tag
        run: |
          TAG="${GITHUB_REF##*/}"
          IS_SEMANTIC_TAG=$(echo "$TAG" | grep -q '^v\?[0-9]\+\.[0-9]\+\.[0-9]\+$' && echo true || echo false)
          echo "Tag = '$TAG', is semantic tag = '$IS_SEMANTIC_TAG'"
          echo "is_semantic_tag=$IS_SEMANTIC_TAG" >> $GITHUB_OUTPUT
          echo "app_image_tag=$TAG" >> $GITHUB_OUTPUT
      -
        name: 'Push image to ECR'
        uses: keboola/action-push-to-ecr@master
        with:
          vendor: '${{ env.KBC_DEVELOPERPORTAL_VENDOR }}'
          app_id: '${{ env.KBC_DEVELOPERPORTAL_APP }}'
          username: '${{ env.KBC_DEVELOPERPORTAL_USERNAME }}'
          password: '${{ env.KBC_DEVELOPERPORTAL_PASSWORD }}'
          tag: '${{ steps.tag.outputs.app_image_tag }}'
          push_latest: '${{ steps.tag.outputs.is_semantic_tag }}'
          source_image: '${{ env.APP_IMAGE}}'
  tests:
    needs: build
    runs-on: ubuntu-latest
    steps:
      -
        name: 'Check out the repo'
        uses: actions/checkout@v3
      -
        name: 'Pull image from ECR'
        uses: keboola/action-pull-from-ecr@master
        with:
          vendor: '${{ env.KBC_DEVELOPERPORTAL_VENDOR }}'
          app_id: '${{ env.KBC_DEVELOPERPORTAL_APP }}'
          username: '${{ env.KBC_DEVELOPERPORTAL_USERNAME }}'
          password: '${{ env.KBC_DEVELOPERPORTAL_PASSWORD }}'
          tag: '${{ needs.build.outputs.app_image_tag }}'
          target_image: '${{ env.APP_IMAGE}}'
          tag_as_latest: true
      -
        name: 'Run tests with elasticsearch version 1.3'
        run: 'docker-compose run --rm -e EX_ES_HOST=elasticsearch13 -e EX_ES_HOST_PORT=9200 app-tests'
      -
        name: 'Run tests with elasticsearch version 2.2'
        run: 'docker-compose run --rm -e EX_ES_HOST=elasticsearch22 -e EX_ES_HOST_PORT=9200 app-tests'
      -
        name: 'Run tests with elasticsearch version 7.1.1'
        run: 'docker-compose run --rm -e EX_ES_HOST=elasticsearch71 -e EX_ES_HOST_PORT=9200 app-tests'

  deploy:
    needs:
      - build
      - tests
    runs-on: ubuntu-latest
    if: 'startsWith(github.ref, ''refs/tags/'') && needs.build.outputs.is_semantic_tag == ''true'''
    steps:
      -
        name: 'Set tag in the Developer Portal'
        uses: keboola/action-set-tag-developer-portal@master
        with:
          vendor: '${{ env.KBC_DEVELOPERPORTAL_VENDOR }}'
          app_id: '${{ env.KBC_DEVELOPERPORTAL_APP }}'
          username: '${{ env.KBC_DEVELOPERPORTAL_USERNAME }}'
          password: '${{ env.KBC_DEVELOPERPORTAL_PASSWORD }}'
          tag: '${{ needs.build.outputs.app_image_tag }}'
